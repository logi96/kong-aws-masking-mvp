version: '3.8'

services:
  # Redis - Data persistence layer
  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
    container_name: claude-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - ./redis/data:/data
      - ./logs/redis:/var/log/redis
    environment:
      - TZ=${TZ:-Asia/Seoul}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - claude-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Kong - API Gateway with AWS masking
  kong:
    build:
      context: ./kong
      dockerfile: Dockerfile
    container_name: claude-kong
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/usr/local/kong/declarative/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_LOG_LEVEL=${KONG_LOG_LEVEL:-info}
      - KONG_MEM_CACHE_SIZE=${KONG_MEM_CACHE_SIZE:-2048m}
      - KONG_PLUGINS=bundled,aws-masker
      - KONG_LUA_PACKAGE_PATH=/usr/local/kong/plugins/?.lua;/usr/local/kong/plugins/?/init.lua;;
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - TZ=${TZ:-Asia/Seoul}
    volumes:
      - ./kong/kong.yml:/usr/local/kong/declarative/kong.yml:ro
      - ./kong/plugins:/usr/local/kong/plugins:ro
      - ./logs/kong:/usr/local/kong/logs
    ports:
      - "${KONG_ADMIN_PORT:-8001}:8001"
      - "${KONG_PROXY_PORT:-8000}:8000"
    networks:
      - claude-network
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: ${KONG_MEMORY_LIMIT:-4G}
        reservations:
          cpus: '1.0'
          memory: 2G

  # Nginx - Enterprise proxy layer
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: claude-nginx
    depends_on:
      kong:
        condition: service_healthy
    ports:
      - "${NGINX_PROXY_PORT:-8082}:8082"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./logs/nginx:/var/log/nginx
    environment:
      - NGINX_WORKER_PROCESSES=${NGINX_WORKER_PROCESSES:-auto}
      - NGINX_WORKER_CONNECTIONS=${NGINX_WORKER_CONNECTIONS:-1024}
      - TZ=${TZ:-Asia/Seoul}
    networks:
      - claude-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Claude Client - Test environment
  claude-client:
    build:
      context: ./claude-client
      dockerfile: Dockerfile
    container_name: claude-client
    depends_on:
      nginx:
        condition: service_healthy
    environment:
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - ANTHROPIC_BASE_URL=http://nginx:8082
      - NODE_ENV=${NODE_ENV:-development}
      - TZ=${TZ:-Asia/Seoul}
    volumes:
      - ./claude-client/test-scenarios:/app/test-scenarios:ro
      - ./logs/client:/app/logs
    networks:
      - claude-network
    command: ["tail", "-f", "/dev/null"]  # Keep container running
    restart: unless-stopped

networks:
  claude-network:
    name: ${NETWORK_NAME:-claude-enterprise}
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  redis-data:
  kong-logs:
  nginx-logs: