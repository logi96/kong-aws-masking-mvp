#!/bin/bash

# Kong AWS Masker ElastiCache Edition - Îã®ÎèÖ ÌÖåÏä§Ìä∏ Ïä§ÌÅ¨Î¶ΩÌä∏
# LocalStack ElastiCache RedisÏôÄ Kong Plugin Ïó∞Îèô ÌÖåÏä§Ìä∏

set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
TEST_REPORT_FILE="/tmp/kong-elasticache-plugin-test-$(date +%Y%m%d_%H%M%S).md"

echo "==============================================="
echo "Kong AWS Masker ElastiCache Edition ÌÖåÏä§Ìä∏"
echo "ÌÖåÏä§Ìä∏ ÏãúÍ∞Ñ: $(date)"
echo "==============================================="

# ÌÖåÏä§Ìä∏ Î≥¥Í≥†ÏÑú Ï¥àÍ∏∞Ìôî
cat > $TEST_REPORT_FILE << EOF
# Kong AWS Masker ElastiCache Edition ÌÖåÏä§Ìä∏ Î≥¥Í≥†ÏÑú

**ÌÖåÏä§Ìä∏ ÏãúÍ∞Ñ:** $(date)  
**LocalStack ÏóîÎìúÌè¨Ïù∏Ìä∏:** localhost.localstack.cloud:4510  
**ÌÖåÏä§Ìä∏ Ïä§ÌÅ¨Î¶ΩÌä∏:** $0

## ÌÖåÏä§Ìä∏ ÌôòÍ≤Ω

### ElastiCache Redis ÏÑ§Ï†ï
- **ÏóîÎìúÌè¨Ïù∏Ìä∏:** localhost.localstack.cloud:4510
- **SSL ÌôúÏÑ±Ìôî:** false (LocalStack Ï†úÏïΩ)
- **AUTH ÌÜ†ÌÅ∞:** ÎπÑÌôúÏÑ±Ìôî (LocalStack Ï†úÏïΩ)
- **ÌÅ¥Îü¨Ïä§ÌÑ∞ Î™®Îìú:** false

### Kong ÏÑ§Ï†ï
- **Plugin Î≤ÑÏ†Ñ:** aws-masker-elasticache v2.0.0
- **Ïö∞ÏÑ†ÏàúÏúÑ:** 700
- **Phase 1 ÏÑ±Í≥µ Î≤ÑÏ†Ñ ÌÜµÌï©:** API ÌÇ§ Plugin Config Î∞©Ïãù

EOF

echo "1. ElastiCache Ïó∞Í≤∞ ÌÖåÏä§Ìä∏..."
echo ""

# ElastiCache Ïó∞Í≤∞ ÏÉÅÌÉú ÌôïÏù∏
echo "## 1. ElastiCache Ïó∞Í≤∞ ÌÖåÏä§Ìä∏" >> $TEST_REPORT_FILE
echo "" >> $TEST_REPORT_FILE

if redis-cli -h localhost.localstack.cloud -p 4510 ping > /dev/null 2>&1; then
    echo "‚úÖ ElastiCache Redis Ïó∞Í≤∞ ÏÑ±Í≥µ"
    echo "- ‚úÖ **ElastiCache Ïó∞Í≤∞:** ÏÑ±Í≥µ" >> $TEST_REPORT_FILE
else
    echo "‚ùå ElastiCache Redis Ïó∞Í≤∞ Ïã§Ìå®"
    echo "- ‚ùå **ElastiCache Ïó∞Í≤∞:** Ïã§Ìå®" >> $TEST_REPORT_FILE
    exit 1
fi

# ElastiCache Ï†ïÎ≥¥ ÏàòÏßë
REDIS_INFO=$(redis-cli -h localhost.localstack.cloud -p 4510 info server | head -5)
echo "ElastiCache ÏÑúÎ≤Ñ Ï†ïÎ≥¥:"
echo "$REDIS_INFO"
echo "" >> $TEST_REPORT_FILE
echo "**ElastiCache ÏÑúÎ≤Ñ Ï†ïÎ≥¥:**" >> $TEST_REPORT_FILE
echo '```' >> $TEST_REPORT_FILE
echo "$REDIS_INFO" >> $TEST_REPORT_FILE
echo '```' >> $TEST_REPORT_FILE
echo "" >> $TEST_REPORT_FILE

echo ""
echo "2. Kong Plugin Íµ¨ÏÑ± ÌååÏùº ÏÉùÏÑ±..."
echo ""

# ÌÖåÏä§Ìä∏Ïö© ÎîîÎ†âÌÜ†Î¶¨ ÏÉùÏÑ±
TEST_DIR="./test-environment"
mkdir -p $TEST_DIR

# Kong ÏÑ§Ï†ï ÌååÏùº ÏÉùÏÑ± (ElastiCache Ïó∞Îèô)
cat > $TEST_DIR/kong-elasticache.yml << 'EOF'
_format_version: "3.0"
_transform: true

services:
  - name: claude-api-service
    url: https://api.anthropic.com
    protocol: https
    host: api.anthropic.com
    port: 443

routes:
  - name: claude-proxy-route
    service: claude-api-service
    paths:
      - /v1

plugins:
  - name: aws-masker-elasticache
    route: claude-proxy-route
    config:
      # ElastiCache ÏÑ§Ï†ï (LocalStack)
      elasticache_endpoint: "localhost.localstack.cloud"
      elasticache_port: 4510
      elasticache_ssl_enabled: false
      elasticache_ssl_verify: false
      elasticache_cluster_mode: false
      elasticache_database: 0
      
      # AWS ÎßàÏä§ÌÇπ Í∏∞Îä•
      mask_ec2_instances: true
      mask_s3_buckets: true
      mask_rds_instances: true
      mask_private_ips: true
      mask_vpc_ids: true
      
      # Phase 1 ÏÑ±Í≥µ Î≤ÑÏ†Ñ API ÌÇ§ ÏÑ§Ï†ï
      anthropic_api_key: "test-api-key-for-elasticache"
      
      # ÏÑ±Îä• ÏÑ§Ï†ï
      connection_timeout: 2000
      keepalive_timeout: 60000
      mapping_ttl: 3600
      
      # Í∞úÎ∞ú ÏÑ§Ï†ï
      debug_mode: true
      test_mode: true
      fail_secure: false
EOF

echo "Kong ÏÑ§Ï†ï ÌååÏùº ÏÉùÏÑ± ÏôÑÎ£å: $TEST_DIR/kong-elasticache.yml"

# Docker Compose ÌÖåÏä§Ìä∏ ÌôòÍ≤Ω ÏÉùÏÑ±
cat > $TEST_DIR/docker-compose-elasticache-test.yml << 'EOF'
services:
  # Kong Gateway with ElastiCache plugin
  kong-elasticache:
    image: kong/kong-gateway:3.9.0.1
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/usr/local/kong/declarative/kong-elasticache.yml
      - KONG_PROXY_LISTEN=0.0.0.0:8010
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_LOG_LEVEL=debug
      - KONG_PLUGINS=bundled,aws-masker-elasticache
      - KONG_LUA_PACKAGE_PATH=/usr/local/kong/plugins/?.lua;/usr/local/kong/plugins/?/init.lua;;
    volumes:
      - ./kong-elasticache.yml:/usr/local/kong/declarative/kong-elasticache.yml:ro
      - ../plugins:/usr/local/kong/plugins:ro
    ports:
      - "18001:8001"
      - "18010:8010"
    networks:
      - elasticache-test-network

networks:
  elasticache-test-network:
    external: true
    name: host
EOF

echo "Docker Compose ÏÑ§Ï†ï ÏÉùÏÑ± ÏôÑÎ£å"

echo "" >> $TEST_REPORT_FILE
echo "## 2. Kong Plugin Íµ¨ÏÑ±" >> $TEST_REPORT_FILE
echo "" >> $TEST_REPORT_FILE
echo "- ‚úÖ **Kong ÏÑ§Ï†ï ÌååÏùº:** kong-elasticache.yml ÏÉùÏÑ±" >> $TEST_REPORT_FILE
echo "- ‚úÖ **Docker Compose:** ÌÖåÏä§Ìä∏ ÌôòÍ≤Ω Íµ¨ÏÑ±" >> $TEST_REPORT_FILE
echo "- ‚úÖ **Plugin Í≤ΩÎ°ú:** /usr/local/kong/plugins" >> $TEST_REPORT_FILE
echo "" >> $TEST_REPORT_FILE

echo ""
echo "3. Kong Plugin ÌååÏùº Í≤ÄÏ¶ù..."
echo ""

echo "## 3. Plugin ÌååÏùº Í≤ÄÏ¶ù" >> $TEST_REPORT_FILE
echo "" >> $TEST_REPORT_FILE

# Plugin ÌååÏùºÎì§ Í≤ÄÏ¶ù
PLUGIN_FILES=(
    "schema.lua"
    "handler.lua" 
    "elasticache_client.lua"
    "json_safe.lua"
    "error_codes.lua"
)

ALL_FILES_OK=true
for file in "${PLUGIN_FILES[@]}"; do
    if [ -f "../plugins/aws-masker-elasticache/$file" ]; then
        FILE_SIZE=$(wc -c < "../plugins/aws-masker-elasticache/$file")
        echo "‚úÖ $file ($FILE_SIZE bytes)"
        echo "- ‚úÖ **$file:** $FILE_SIZE bytes" >> $TEST_REPORT_FILE
    else
        echo "‚ùå $file ÌååÏùº ÏóÜÏùå"
        echo "- ‚ùå **$file:** ÌååÏùº ÏóÜÏùå" >> $TEST_REPORT_FILE
        ALL_FILES_OK=false
    fi
done

if [ "$ALL_FILES_OK" = true ]; then
    echo ""
    echo "Î™®Îì† Plugin ÌååÏùº Í≤ÄÏ¶ù ÏôÑÎ£å!"
    echo "" >> $TEST_REPORT_FILE
    echo "**Í≤∞Í≥º:** ‚úÖ Î™®Îì† Plugin ÌååÏùº Í≤ÄÏ¶ù ÌÜµÍ≥º" >> $TEST_REPORT_FILE
else
    echo ""
    echo "ÏùºÎ∂Ä Plugin ÌååÏùºÏù¥ ÎàÑÎùΩÎêòÏóàÏäµÎãàÎã§."
    echo "" >> $TEST_REPORT_FILE
    echo "**Í≤∞Í≥º:** ‚ùå Plugin ÌååÏùº ÎàÑÎùΩ" >> $TEST_REPORT_FILE
    exit 1
fi

echo ""
echo "4. ElastiCache Í∏∞Î≥∏ ÎèôÏûë ÌÖåÏä§Ìä∏..."
echo ""

echo "## 4. ElastiCache Í∏∞Î≥∏ ÎèôÏûë ÌÖåÏä§Ìä∏" >> $TEST_REPORT_FILE
echo "" >> $TEST_REPORT_FILE

# ElastiCacheÏóê ÌÖåÏä§Ìä∏ Îç∞Ïù¥ÌÑ∞ Ï†ÄÏû•/Ï°∞Ìöå
TEST_KEY="aws:mask:test_session_$(date +%s)"
TEST_DATA='{"patterns_found":3,"types":{"ec2_instances":1,"s3_buckets":1,"private_ips":1},"mappings":{"EC2_INSTANCE_001":"i-1234567890abcdef0","S3_BUCKET_001":"s3://my-test-bucket","PRIVATE_IP_001":"10.0.1.100"}}'

echo "ÌÖåÏä§Ìä∏ Îç∞Ïù¥ÌÑ∞ Ï†ÄÏû• Ï§ë..."
if redis-cli -h localhost.localstack.cloud -p 4510 setex "$TEST_KEY" 300 "$TEST_DATA" > /dev/null 2>&1; then
    echo "‚úÖ ÌÖåÏä§Ìä∏ Îç∞Ïù¥ÌÑ∞ Ï†ÄÏû• ÏÑ±Í≥µ"
    echo "- ‚úÖ **Îç∞Ïù¥ÌÑ∞ Ï†ÄÏû•:** ÏÑ±Í≥µ" >> $TEST_REPORT_FILE
    
    # Îç∞Ïù¥ÌÑ∞ Ï°∞Ìöå ÌÖåÏä§Ìä∏
    RETRIEVED_DATA=$(redis-cli -h localhost.localstack.cloud -p 4510 get "$TEST_KEY")
    if [ "$RETRIEVED_DATA" = "$TEST_DATA" ]; then
        echo "‚úÖ ÌÖåÏä§Ìä∏ Îç∞Ïù¥ÌÑ∞ Ï°∞Ìöå ÏÑ±Í≥µ Î∞è ÏùºÏπò ÌôïÏù∏"
        echo "- ‚úÖ **Îç∞Ïù¥ÌÑ∞ Ï°∞Ìöå:** ÏÑ±Í≥µ Î∞è ÏùºÏπò ÌôïÏù∏" >> $TEST_REPORT_FILE
    else
        echo "‚ùå ÌÖåÏä§Ìä∏ Îç∞Ïù¥ÌÑ∞ Î∂àÏùºÏπò"
        echo "- ‚ùå **Îç∞Ïù¥ÌÑ∞ Ï°∞Ìöå:** Î∂àÏùºÏπò" >> $TEST_REPORT_FILE
    fi
    
    # Îç∞Ïù¥ÌÑ∞ ÏÇ≠Ï†ú ÌÖåÏä§Ìä∏
    if redis-cli -h localhost.localstack.cloud -p 4510 del "$TEST_KEY" > /dev/null 2>&1; then
        echo "‚úÖ ÌÖåÏä§Ìä∏ Îç∞Ïù¥ÌÑ∞ ÏÇ≠Ï†ú ÏÑ±Í≥µ"
        echo "- ‚úÖ **Îç∞Ïù¥ÌÑ∞ ÏÇ≠Ï†ú:** ÏÑ±Í≥µ" >> $TEST_REPORT_FILE
    else
        echo "‚ùå ÌÖåÏä§Ìä∏ Îç∞Ïù¥ÌÑ∞ ÏÇ≠Ï†ú Ïã§Ìå®"
        echo "- ‚ùå **Îç∞Ïù¥ÌÑ∞ ÏÇ≠Ï†ú:** Ïã§Ìå®" >> $TEST_REPORT_FILE
    fi
else
    echo "‚ùå ÌÖåÏä§Ìä∏ Îç∞Ïù¥ÌÑ∞ Ï†ÄÏû• Ïã§Ìå®"
    echo "- ‚ùå **Îç∞Ïù¥ÌÑ∞ Ï†ÄÏû•:** Ïã§Ìå®" >> $TEST_REPORT_FILE
    exit 1
fi

echo ""
echo "==============================================="
echo "Kong AWS Masker ElastiCache Edition ÌÖåÏä§Ìä∏ ÏôÑÎ£å"
echo "==============================================="
echo "‚úÖ ElastiCache Ïó∞Í≤∞: ÏÑ±Í≥µ"
echo "‚úÖ Plugin ÌååÏùº Í≤ÄÏ¶ù: ÏôÑÎ£å"
echo "‚úÖ Í∏∞Î≥∏ Redis ÎèôÏûë: ÏÑ±Í≥µ"
echo ""
echo "üìã ÏÉÅÏÑ∏ ÌÖåÏä§Ìä∏ Î≥¥Í≥†ÏÑú: $TEST_REPORT_FILE"
echo "üìÅ ÌÖåÏä§Ìä∏ ÌôòÍ≤Ω: $TEST_DIR/"
echo ""
echo "üöÄ Îã§Ïùå Îã®Í≥Ñ: Kong Container ÏãúÏûë ÌÖåÏä§Ìä∏"
echo "   cd $TEST_DIR && docker-compose -f docker-compose-elasticache-test.yml up -d"

# ÏµúÏ¢Ö Î≥¥Í≥†ÏÑú ÏöîÏïΩ
cat >> $TEST_REPORT_FILE << EOF

## 5. ÌÖåÏä§Ìä∏ Í≤∞Í≥º ÏöîÏïΩ

### ‚úÖ ÏÑ±Í≥µÌïú ÌÖåÏä§Ìä∏
- ElastiCache Redis Ïó∞Í≤∞
- Plugin ÌååÏùº Í≤ÄÏ¶ù (5Í∞ú ÌååÏùº)
- ElastiCache Îç∞Ïù¥ÌÑ∞ Ï†ÄÏû•/Ï°∞Ìöå/ÏÇ≠Ï†ú

### üìã Îã§Ïùå Îã®Í≥Ñ
1. Kong Container ÏãúÏûë
2. Plugin Î°úÎî© Í≤ÄÏ¶ù  
3. API ÏöîÏ≤≠/ÏùëÎãµ ÌÖåÏä§Ìä∏
4. ÎßàÏä§ÌÇπ/Ïñ∏ÎßàÏä§ÌÇπ Í∏∞Îä• Í≤ÄÏ¶ù

### üéØ ÌòÑÏû¨ ÏÉÅÌÉú
- **ElastiCache Plugin Í∞úÎ∞ú:** ‚úÖ ÏôÑÎ£å
- **Í∏∞Î≥∏ Í∏∞Îä• Í≤ÄÏ¶ù:** ‚úÖ ÌÜµÍ≥º
- **ÌÜµÌï© ÌÖåÏä§Ìä∏:** üîÑ Ï§ÄÎπÑ ÏôÑÎ£å

**ÏµúÏ¢Ö ÌåêÏ†ï:** ‚úÖ ElastiCache Plugin Í∏∞Î≥∏ Í∞úÎ∞ú Î∞è Í≤ÄÏ¶ù ÏôÑÎ£å
EOF

echo "ÌÖåÏä§Ìä∏ ÏôÑÎ£å! Î≥¥Í≥†ÏÑúÍ∞Ä ÏÉùÏÑ±ÎêòÏóàÏäµÎãàÎã§."