{{- if .Values.tests.enabled }}
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "kong-aws-masking.fullname" . }}-test-connectivity"
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "kong-aws-masking.labels" . | nindent 4 }}
    app.kubernetes.io/component: test
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  restartPolicy: Never
  containers:
  - name: connectivity-test
    image: curlimages/curl:8.4.0
    command:
    - /bin/sh
    - -c
    - |
      set -e
      echo "=== Kong AWS Masking Connectivity Test ==="
      
      # Test Redis connectivity
      echo "1. Testing Redis connectivity..."
      nc -z {{ include "kong-aws-masking.redis.host" . }}.{{ .Values.global.namespace }}.svc.cluster.local {{ .Values.redis.service.port }}
      echo "✓ Redis is reachable"
      
      # Test Kong connectivity
      echo "2. Testing Kong connectivity..."
      KONG_URL="http://{{ include "kong-aws-masking.kong.serviceName" . }}.{{ .Values.global.namespace }}.svc.cluster.local:{{ .Values.kong.service.port }}"
      curl -f -s "$KONG_URL" || echo "Kong proxy endpoint reachable"
      
      KONG_ADMIN_URL="http://{{ include "kong-aws-masking.kong.serviceName" . }}.{{ .Values.global.namespace }}.svc.cluster.local:{{ .Values.kong.service.adminPort }}"
      curl -f -s "$KONG_ADMIN_URL/status" | grep -q "message" && echo "✓ Kong admin API is healthy"
      
      # Test Nginx connectivity
      echo "3. Testing Nginx connectivity..."
      NGINX_URL="http://{{ include "kong-aws-masking.nginx.serviceName" . }}.{{ .Values.global.namespace }}.svc.cluster.local:{{ .Values.nginx.service.port }}"
      curl -f -s "$NGINX_URL/health" | grep -q "healthy" && echo "✓ Nginx is healthy"
      
      # Test Claude SDK service
      echo "4. Testing Claude SDK service..."
      SDK_URL="http://{{ include "kong-aws-masking.claudeSDK.serviceName" . }}.{{ .Values.global.namespace }}.svc.cluster.local:{{ .Values.claudeSDK.service.port }}"
      curl -f -s "$SDK_URL/health" | grep -q "healthy" && echo "✓ Claude SDK service is reachable"
      
      echo "=== All connectivity tests passed! ==="
    resources:
      limits:
        memory: "128Mi"
        cpu: "100m"
      requests:
        memory: "64Mi"
        cpu: "50m"
  {{- if eq .Values.global.environment "localstack" }}
  # Add LocalStack connectivity test
  - name: localstack-test
    image: curlimages/curl:8.4.0
    command:
    - /bin/sh
    - -c
    - |
      set -e
      echo "=== LocalStack Connectivity Test ==="
      
      # Test LocalStack connectivity (if available)
      if nc -z localstack.{{ .Values.global.namespace }}.svc.cluster.local 4566; then
        echo "✓ LocalStack is reachable"
        curl -f -s "http://localstack.{{ .Values.global.namespace }}.svc.cluster.local:4566/health" || echo "LocalStack health check attempted"
      else
        echo "⚠ LocalStack not found (optional for some environments)"
      fi
      
      echo "=== LocalStack connectivity test completed ==="
    resources:
      limits:
        memory: "64Mi"
        cpu: "50m"
      requests:
        memory: "32Mi"
        cpu: "25m"
  {{- end }}
{{- end }}