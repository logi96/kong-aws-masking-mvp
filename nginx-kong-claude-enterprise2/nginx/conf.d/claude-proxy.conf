# Upstream configuration for Kong Gateway
upstream kong_backend {
    server kong:8000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# Rate limiting zone
limit_req_zone $binary_remote_addr zone=claude_api:10m rate=10r/s;
limit_req_status 429;

# Main server block for Claude proxy
server {
    listen 8082;
    server_name _;

    # Access log with custom format for this server
    access_log /var/log/nginx/claude-proxy-access.log json;
    error_log /var/log/nginx/claude-proxy-error.log warn;

    # Health check endpoint
    location /health {
        access_log off;
        default_type application/json;
        return 200 '{"status":"healthy","service":"nginx-proxy","timestamp":"$time_iso8601"}';
    }

    # Metrics endpoint (basic)
    location /metrics {
        access_log off;
        default_type text/plain;
        return 200 'nginx_up 1\nnginx_requests_total $request_id\n';
    }

    # Claude API proxy
    location /v1/messages {
        # Rate limiting
        limit_req zone=claude_api burst=20 nodelay;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,anthropic-version,x-api-key' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Security headers
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options DENY always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Proxy to Kong
        proxy_pass http://kong_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        # Additional headers for Claude API
        proxy_set_header anthropic-version $http_anthropic_version;
        proxy_set_header x-api-key $http_x_api_key;

        # Request ID for tracing
        proxy_set_header X-Request-ID $request_id;

        # Timeouts specific to Claude API (longer for streaming)
        proxy_connect_timeout 10s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;

        # Buffering settings for streaming responses
        proxy_buffering off;
        proxy_request_buffering off;

        # Error handling
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.json;
    }

    # AWS analyze endpoint proxy
    location /analyze {
        # Rate limiting
        limit_req zone=claude_api burst=10 nodelay;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;

        # Handle preflight
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # Proxy to Kong
        proxy_pass http://kong_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        # Request ID for tracing
        proxy_set_header X-Request-ID $request_id;

        # Timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Catch-all location
    location / {
        # Log all other requests for monitoring
        access_log /var/log/nginx/claude-proxy-other.log json;
        
        # Default proxy to Kong
        proxy_pass http://kong_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header X-Request-ID $request_id;
    }

    # Error pages
    location ~ ^/(50x\.json|40x\.json)$ {
        internal;
        default_type application/json;
        root /usr/share/nginx/html;
    }

    # Status page for monitoring
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 172.16.0.0/12;  # Docker networks
        deny all;
    }
}