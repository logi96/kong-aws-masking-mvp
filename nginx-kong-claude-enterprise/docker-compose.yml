version: '3.8'

# 공통 환경 변수
x-common-variables: &common-variables
  TZ: ${TZ:-UTC}
  LOG_LEVEL: ${LOG_LEVEL:-info}

# 헬스체크 기본 설정
x-healthcheck-defaults: &healthcheck-defaults
  interval: 30s
  timeout: 3s
  retries: 3
  start_period: 40s

services:
  # Redis - 데이터 저장소
  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
    container_name: ${REDIS_CONTAINER_NAME:-redis-cache}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    environment:
      <<: *common-variables
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - claude-net
    healthcheck:
      <<: *healthcheck-defaults
      test: ["CMD", "redis-cli", "--pass", "${REDIS_PASSWORD}", "ping"]
    deploy:
      resources:
        limits:
          memory: ${REDIS_MAX_MEMORY:-512mb}
        reservations:
          memory: 256mb

  # Kong - API Gateway with aws-masker
  kong:
    build:
      context: ./kong
      dockerfile: Dockerfile
    container_name: ${KONG_CONTAINER_NAME:-kong-gateway}
    environment:
      <<: *common-variables
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: "/opt/kong/kong.yml"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_PROXY_LISTEN: "0.0.0.0:8000"
      KONG_LOG_LEVEL: ${KONG_LOG_LEVEL:-info}
      KONG_PLUGINS: "bundled,aws-masker"
      # Redis 연결
      REDIS_HOST: redis
      REDIS_PORT: 6379
      # REDIS_PASSWORD: ${REDIS_PASSWORD}  # Redis에서 패스워드 사용 안 함
      # Claude API
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
    ports:
      - "${KONG_ADMIN_PORT:-8001}:8001"
    volumes:
      - ./kong/kong.yml:/opt/kong/kong.yml:ro
      - ./logs/kong:/var/log/kong
    networks:
      - claude-net
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      <<: *healthcheck-defaults
      test: ["CMD", "kong", "health"]
    deploy:
      resources:
        limits:
          cpus: '${KONG_CPU_LIMIT:-0.5}'
          memory: ${KONG_MEMORY_LIMIT:-1024m}
        reservations:
          cpus: '0.25'
          memory: 512mb

  # Nginx - 엔터프라이즈 프록시
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: ${NGINX_CONTAINER_NAME:-nginx-claude-proxy}
    ports:
      - "${CLAUDE_PROXY_PORT:-8082}:8082"
    environment:
      <<: *common-variables
      WORKER_PROCESSES: ${NGINX_WORKER_PROCESSES:-auto}
      WORKER_CONNECTIONS: ${NGINX_WORKER_CONNECTIONS:-1024}
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./logs/nginx:/var/log/nginx
    networks:
      - claude-net
    depends_on:
      kong:
        condition: service_healthy
    healthcheck:
      <<: *healthcheck-defaults
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256mb
        reservations:
          cpus: '0.1'
          memory: 128mb

  # Claude Client - 테스트 환경
  claude-client:
    build:
      context: ./claude-client
      dockerfile: Dockerfile
    container_name: ${CLIENT_CONTAINER_NAME:-claude-client}
    environment:
      <<: *common-variables
      ANTHROPIC_BASE_URL: http://nginx:8082
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
    volumes:
      - ./claude-client/test-scenarios:/app/test-scenarios:ro
      - ./logs/claude-client:/app/logs
    networks:
      - claude-net
    depends_on:
      nginx:
        condition: service_healthy
    command: tail -f /dev/null  # 컨테이너 유지
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 512mb
        reservations:
          cpus: '0.1'
          memory: 256mb

networks:
  claude-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  redis-data:
    driver: local